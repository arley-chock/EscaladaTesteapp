@page "/usuarios/delete"

@using Escalada.API.Model
@inject NavigationManager NavigationManager
@inject UsuarioService usuarioservice

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Usuario</h4>
    <hr />
    @if (usuario is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Nome</dt>
            <dd class="col-sm-10">@usuario.Nome</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Sobrenome</dt>
            <dd class="col-sm-10">@usuario.Sobrenome</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@usuario.Email</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Telefone</dt>
            <dd class="col-sm-10">@usuario.Telefone</dd>
        </dl>
        <EditForm Model="usuario" OnValidSubmit="DeleteUsuario" FormName="deleteForm">
            <button type="submit" class="btn btn-danger">Delete</button> |
            <a href="/usuarios" class="btn btn-secondary">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Usuario? usuario;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            usuario = await usuarioservice.GetUsuarioByIdAsync(Id);

            if (usuario is null)
            {
                Console.WriteLine($"User with Id {Id} not found.");
                NavigationManager.NavigateTo("/usuarios");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching user: {ex.Message}");
            NavigationManager.NavigateTo("/usuarios");
        }
    }

    private async Task DeleteUsuario()
    {
        try
        {
            var deleted = await usuarioservice.DeleteUsuarioAsync(Id);

            if (deleted)
            {
                Console.WriteLine($"User with Id {Id} deleted successfully.");
            }
            else
            {
                Console.WriteLine($"Failed to delete user with Id: {Id}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error deleting user: {ex.Message}");
        }
        finally
        {
            NavigationManager.NavigateTo("/usuarios");
        }
    }
}
