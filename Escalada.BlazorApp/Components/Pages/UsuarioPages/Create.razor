@page "/usuarios/create"

@using Microsoft.EntityFrameworkCore
@using Escalada.API.Model
@inject IDbContextFactory<Escalada.API.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager
@inject  UsuarioService usuarioservice

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Usuario</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Usuario" OnValidSubmit="AddUsuario" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="nome" class="form-label">Nome:</label> 
                <InputText id="nome" @bind-Value="Usuario.Nome" class="form-control" /> 
                <ValidationMessage For="() => Usuario.Nome" class="text-danger" /> 
            </div>
            <div class="mb-3">
                <label for="nome" class="form-label">Sobrenome:</label>
                <InputText id="nome" @bind-Value="Usuario.Sobrenome" class="form-control" />
                <ValidationMessage For="() => Usuario.Sobrenome" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="email" class="form-label">Email:</label> 
                <InputText id="email" @bind-Value="Usuario.Email" class="form-control" /> 
                <ValidationMessage For="() => Usuario.Email" class="text-danger" /> 
            </div> 
            <div class="mb-3">
                <label for="telefone" class="form-label">Telefone:</label>
                <InputText id="telefone" @bind-Value="Usuario.Telefone" class="form-control" />
                <ValidationMessage For="() => Usuario.Telefone" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/usuarios">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public Usuario Usuario { get; set; } = new();

  
    public async Task AddUsuario()
    {
       await usuarioservice.AddUsuarioAsync(Usuario);
        NavigationManager.NavigateTo("/usuarios");
    }
}
