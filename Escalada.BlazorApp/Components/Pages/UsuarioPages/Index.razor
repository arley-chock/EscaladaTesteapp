@page "/usuarios"

@using Microsoft.AspNetCore.Components.QuickGrid
@using Escalada.API.Model
@inject UsuarioService usuarioservice

<PageTitle>Index</PageTitle>

<h1>Cadastro de Usuarios</h1>

<p>
    <a href="usuarios/create" class="btn btn-success">Criar</a>
</p>

@if (usuarios is null)
{
    <p><em>Carregando...</em></p>
}
else
{
    <QuickGrid TGridItem="Usuario" Class="table" Items="usuarios.AsQueryable()">
        <PropertyColumn TGridItem="Usuario" TProp="string" Property="usuario => usuario.Nome" Title="Nome" />
        <PropertyColumn TGridItem="Usuario" TProp="string" Property="usuario => usuario.Sobrenome" Title="Sobrenome" />
        <PropertyColumn TGridItem="Usuario" TProp="string" Property="usuario => usuario.Email" Title="Email" />
        <PropertyColumn TGridItem="Usuario" TProp="string" Property="usuario => usuario.Telefone" Title="Telefone" />

        <TemplateColumn TGridItem="Usuario" Context="usuario">
            <a href="@($"usuarios/edit?id={usuario.Id}")" class="btn btn-warning">Editar</a> |
            <a href="@($"usuarios/details?id={usuario.Id}")" class="btn btn-info">Detalhe</a> |
            <a href="@($"usuarios/delete?id={usuario.Id}")" class="btn alert-danger">Excluir</a>
        </TemplateColumn>
    </QuickGrid>
}

@code {
    private List<Usuario>? usuarios;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            usuarios = await usuarioservice.GetUsuariosAsync();
        }
        catch (Exception ex)
        {
            
            Console.Error.WriteLine($"Erro ao carregar os usuários: {ex.Message}");
        }
    }
}
